{"version":3,"file":"ngrx-store-devtools.js","sources":["../../../../modules/store-devtools/src/config.ts","../../../../modules/store-devtools/src/actions.ts","../../../../modules/store-devtools/src/devtools-dispatcher.ts","../../../../modules/store-devtools/src/utils.ts","../../../../modules/store-devtools/src/extension.ts","../../../../modules/store-devtools/src/reducer.ts","../../../../modules/store-devtools/src/devtools.ts","../../../../modules/store-devtools/src/instrument.ts","../../../../modules/store-devtools/index.ts","../../../../modules/store-devtools/ngrx-store-devtools.ts"],"names":["Actions.PerformAction","DevtoolsActions.LOCK_CHANGES","DevtoolsActions.PAUSE_RECORDING","DevtoolsActions.RESET","DevtoolsActions.COMMIT","DevtoolsActions.ROLLBACK","DevtoolsActions.TOGGLE_ACTION","DevtoolsActions.SET_ACTIONS_ACTIVE","DevtoolsActions.JUMP_TO_STATE","DevtoolsActions.JUMP_TO_ACTION","DevtoolsActions.SWEEP","DevtoolsActions.PERFORM_ACTION","DevtoolsActions.IMPORT_STATE","Actions.PERFORM_ACTION","Actions.Refresh","Actions.Reset","Actions.Rollback","Actions.Commit","Actions.Sweep","Actions.ToggleAction","Actions.JumpToAction","Actions.JumpToState","Actions.ImportState","Actions.LockChanges","Actions.PauseRecording"],"mappings":"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","sourcesContent":["import { ActionReducer, Action } from '@ngrx/store';\nimport { InjectionToken } from '@angular/core';\n\nexport type ActionSanitizer = (action: Action, id: number) => Action;\nexport type StateSanitizer = (state: any, index: number) => any;\nexport type SerializationOptions = {\n  options?: boolean | any;\n  replacer?: (key: any, value: any) => {};\n  reviver?: (key: any, value: any) => {};\n  immutable?: any;\n  refs?: Array<any>;\n};\nexport type Predicate = (state: any, action: Action) => boolean;\nexport interface DevToolsFeatureOptions {\n  pause?: boolean;\n  lock?: boolean;\n  persist?: boolean;\n  export?: boolean;\n  import?: 'custom' | boolean;\n  jump?: boolean;\n  skip?: boolean;\n  reorder?: boolean;\n  dispatch?: boolean;\n  test?: boolean;\n}\n\nexport class StoreDevtoolsConfig {\n  maxAge: number | false = false;\n  monitor?: ActionReducer<any, any>;\n  actionSanitizer?: ActionSanitizer;\n  stateSanitizer?: StateSanitizer;\n  name?: string;\n  serialize?: boolean | SerializationOptions;\n  logOnly?: boolean;\n  features?: DevToolsFeatureOptions;\n  actionsBlocklist?: string[];\n  actionsSafelist?: string[];\n  predicate?: Predicate;\n}\n\nexport const STORE_DEVTOOLS_CONFIG = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/store-devtools Options'\n);\nexport const INITIAL_OPTIONS = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/store-devtools Initial Config'\n);\n\nexport type StoreDevtoolsOptions =\n  | Partial<StoreDevtoolsConfig>\n  | (() => Partial<StoreDevtoolsConfig>);\n\nexport function noMonitor(): null {\n  return null;\n}\n\nexport const DEFAULT_NAME = 'NgRx Store DevTools';\n\nexport function createConfig(\n  optionsInput: StoreDevtoolsOptions\n): StoreDevtoolsConfig {\n  const DEFAULT_OPTIONS: StoreDevtoolsConfig = {\n    maxAge: false,\n    monitor: noMonitor,\n    actionSanitizer: undefined,\n    stateSanitizer: undefined,\n    name: DEFAULT_NAME,\n    serialize: false,\n    logOnly: false,\n    // Add all features explicitly. This prevent buggy behavior for\n    // options like \"lock\" which might otherwise not show up.\n    features: {\n      pause: true, // start/pause recording of dispatched actions\n      lock: true, // lock/unlock dispatching actions and side effects\n      persist: true, // persist states on page reloading\n      export: true, // export history of actions in a file\n      import: 'custom', // import history of actions from a file\n      jump: true, // jump back and forth (time travelling)\n      skip: true, // skip (cancel) actions\n      reorder: true, // drag and drop actions in the history list\n      dispatch: true, // dispatch custom actions or action creators\n      test: true, // generate tests for the selected actions\n    },\n  };\n\n  const options =\n    typeof optionsInput === 'function' ? optionsInput() : optionsInput;\n  const logOnly = options.logOnly\n    ? { pause: true, export: true, test: true }\n    : false;\n  const features = options.features || logOnly || DEFAULT_OPTIONS.features;\n  const config = Object.assign({}, DEFAULT_OPTIONS, { features }, options);\n\n  if (config.maxAge && config.maxAge < 2) {\n    throw new Error(\n      `Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`\n    );\n  }\n\n  return config;\n}\n","import { Action } from '@ngrx/store';\n\nexport const PERFORM_ACTION = 'PERFORM_ACTION';\nexport const REFRESH = 'REFRESH';\nexport const RESET = 'RESET';\nexport const ROLLBACK = 'ROLLBACK';\nexport const COMMIT = 'COMMIT';\nexport const SWEEP = 'SWEEP';\nexport const TOGGLE_ACTION = 'TOGGLE_ACTION';\nexport const SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nexport const JUMP_TO_STATE = 'JUMP_TO_STATE';\nexport const JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nexport const IMPORT_STATE = 'IMPORT_STATE';\nexport const LOCK_CHANGES = 'LOCK_CHANGES';\nexport const PAUSE_RECORDING = 'PAUSE_RECORDING';\n\nexport class PerformAction implements Action {\n  readonly type = PERFORM_ACTION;\n\n  constructor(public action: Action, public timestamp: number) {\n    if (typeof action.type === 'undefined') {\n      throw new Error(\n        'Actions may not have an undefined \"type\" property. ' +\n          'Have you misspelled a constant?'\n      );\n    }\n  }\n}\n\nexport class Refresh implements Action {\n  readonly type = REFRESH;\n}\n\nexport class Reset implements Action {\n  readonly type = RESET;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Rollback implements Action {\n  readonly type = ROLLBACK;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Commit implements Action {\n  readonly type = COMMIT;\n\n  constructor(public timestamp: number) {}\n}\n\nexport class Sweep implements Action {\n  readonly type = SWEEP;\n}\n\nexport class ToggleAction implements Action {\n  readonly type = TOGGLE_ACTION;\n\n  constructor(public id: number) {}\n}\n\nexport class SetActionsActive implements Action {\n  readonly type = SET_ACTIONS_ACTIVE;\n\n  constructor(\n    public start: number,\n    public end: number,\n    public active: boolean = true\n  ) {}\n}\n\nexport class JumpToState implements Action {\n  readonly type = JUMP_TO_STATE;\n\n  constructor(public index: number) {}\n}\n\nexport class JumpToAction implements Action {\n  readonly type = JUMP_TO_ACTION;\n\n  constructor(public actionId: number) {}\n}\n\nexport class ImportState implements Action {\n  readonly type = IMPORT_STATE;\n\n  constructor(public nextLiftedState: any) {}\n}\n\nexport class LockChanges implements Action {\n  readonly type = LOCK_CHANGES;\n\n  constructor(public status: boolean) {}\n}\n\nexport class PauseRecording implements Action {\n  readonly type = PAUSE_RECORDING;\n\n  constructor(public status: boolean) {}\n}\n\nexport type All =\n  | PerformAction\n  | Refresh\n  | Reset\n  | Rollback\n  | Commit\n  | Sweep\n  | ToggleAction\n  | SetActionsActive\n  | JumpToState\n  | JumpToAction\n  | ImportState\n  | LockChanges\n  | PauseRecording;\n","import { ActionsSubject } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DevtoolsDispatcher extends ActionsSubject {}\n","import { Action } from '@ngrx/store';\n\nimport * as Actions from './actions';\nimport {\n  ActionSanitizer,\n  StateSanitizer,\n  Predicate,\n  StoreDevtoolsConfig,\n} from './config';\nimport {\n  ComputedState,\n  LiftedAction,\n  LiftedActions,\n  LiftedState,\n} from './reducer';\n\nexport function difference(first: any[], second: any[]) {\n  return first.filter((item) => second.indexOf(item) < 0);\n}\n\n/**\n * Provides an app's view into the state of the lifted store.\n */\nexport function unliftState(liftedState: LiftedState) {\n  const { computedStates, currentStateIndex } = liftedState;\n\n  // At start up NgRx dispatches init actions,\n  // When these init actions are being filtered out by the predicate or safe/block list options\n  // we don't have a complete computed states yet.\n  // At this point it could happen that we're out of bounds, when this happens we fall back to the last known state\n  if (currentStateIndex >= computedStates.length) {\n    const { state } = computedStates[computedStates.length - 1];\n    return state;\n  }\n\n  const { state } = computedStates[currentStateIndex];\n  return state;\n}\n\nexport function unliftAction(liftedState: LiftedState): LiftedAction {\n  return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nexport function liftAction(action: Action) {\n  return new Actions.PerformAction(action, +Date.now());\n}\n\n/**\n * Sanitizes given actions with given function.\n */\nexport function sanitizeActions(\n  actionSanitizer: ActionSanitizer,\n  actions: LiftedActions\n): LiftedActions {\n  return Object.keys(actions).reduce((sanitizedActions, actionIdx) => {\n    const idx = Number(actionIdx);\n    sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n    return sanitizedActions;\n  }, <LiftedActions>{});\n}\n\n/**\n * Sanitizes given action with given function.\n */\nexport function sanitizeAction(\n  actionSanitizer: ActionSanitizer,\n  action: LiftedAction,\n  actionIdx: number\n): LiftedAction {\n  return {\n    ...action,\n    action: actionSanitizer(action.action, actionIdx),\n  };\n}\n\n/**\n * Sanitizes given states with given function.\n */\nexport function sanitizeStates(\n  stateSanitizer: StateSanitizer,\n  states: ComputedState[]\n): ComputedState[] {\n  return states.map((computedState, idx) => ({\n    state: sanitizeState(stateSanitizer, computedState.state, idx),\n    error: computedState.error,\n  }));\n}\n\n/**\n * Sanitizes given state with given function.\n */\nexport function sanitizeState(\n  stateSanitizer: StateSanitizer,\n  state: any,\n  stateIdx: number\n) {\n  return stateSanitizer(state, stateIdx);\n}\n\n/**\n * Read the config and tell if actions should be filtered\n */\nexport function shouldFilterActions(config: StoreDevtoolsConfig) {\n  return config.predicate || config.actionsSafelist || config.actionsBlocklist;\n}\n\n/**\n * Return a full filtered lifted state\n */\nexport function filterLiftedState(\n  liftedState: LiftedState,\n  predicate?: Predicate,\n  safelist?: string[],\n  blocklist?: string[]\n): LiftedState {\n  const filteredStagedActionIds: number[] = [];\n  const filteredActionsById: LiftedActions = {};\n  const filteredComputedStates: ComputedState[] = [];\n  liftedState.stagedActionIds.forEach((id, idx) => {\n    const liftedAction = liftedState.actionsById[id];\n    if (!liftedAction) return;\n    if (\n      idx &&\n      isActionFiltered(\n        liftedState.computedStates[idx],\n        liftedAction,\n        predicate,\n        safelist,\n        blocklist\n      )\n    ) {\n      return;\n    }\n    filteredActionsById[id] = liftedAction;\n    filteredStagedActionIds.push(id);\n    filteredComputedStates.push(liftedState.computedStates[idx]);\n  });\n  return {\n    ...liftedState,\n    stagedActionIds: filteredStagedActionIds,\n    actionsById: filteredActionsById,\n    computedStates: filteredComputedStates,\n  };\n}\n\n/**\n * Return true is the action should be ignored\n */\nexport function isActionFiltered(\n  state: any,\n  action: LiftedAction,\n  predicate?: Predicate,\n  safelist?: string[],\n  blockedlist?: string[]\n) {\n  const predicateMatch = predicate && !predicate(state, action.action);\n  const safelistMatch =\n    safelist &&\n    !action.action.type.match(safelist.map((s) => escapeRegExp(s)).join('|'));\n  const blocklistMatch =\n    blockedlist &&\n    action.action.type.match(blockedlist.map((s) => escapeRegExp(s)).join('|'));\n  return predicateMatch || safelistMatch || blocklistMatch;\n}\n\n/**\n * Return string with escaped RegExp special characters\n * https://stackoverflow.com/a/6969486/1337347\n */\nfunction escapeRegExp(s: string): string {\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Action, UPDATE } from '@ngrx/store';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  debounceTime,\n  filter,\n  map,\n  share,\n  switchMap,\n  take,\n  takeUntil,\n  timeout,\n} from 'rxjs/operators';\n\nimport { IMPORT_STATE, PERFORM_ACTION } from './actions';\nimport {\n  SerializationOptions,\n  STORE_DEVTOOLS_CONFIG,\n  StoreDevtoolsConfig,\n} from './config';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\nimport { LiftedAction, LiftedState } from './reducer';\nimport {\n  isActionFiltered,\n  sanitizeAction,\n  sanitizeActions,\n  sanitizeState,\n  sanitizeStates,\n  shouldFilterActions,\n  unliftState,\n} from './utils';\n\nexport const ExtensionActionTypes = {\n  START: 'START',\n  DISPATCH: 'DISPATCH',\n  STOP: 'STOP',\n  ACTION: 'ACTION',\n};\n\nexport const REDUX_DEVTOOLS_EXTENSION = new InjectionToken<ReduxDevtoolsExtension>(\n  '@ngrx/store-devtools Redux Devtools Extension'\n);\n\nexport interface ReduxDevtoolsExtensionConnection {\n  subscribe(listener: (change: any) => void): void;\n  unsubscribe(): void;\n  send(action: any, state: any): void;\n  init(state?: any): void;\n  error(anyErr: any): void;\n}\nexport interface ReduxDevtoolsExtensionConfig {\n  features?: object | boolean;\n  name: string | undefined;\n  maxAge?: number;\n  serialize?: boolean | SerializationOptions;\n}\n\nexport interface ReduxDevtoolsExtension {\n  connect(\n    options: ReduxDevtoolsExtensionConfig\n  ): ReduxDevtoolsExtensionConnection;\n  send(action: any, state: any, options: ReduxDevtoolsExtensionConfig): void;\n}\n\n@Injectable()\nexport class DevtoolsExtension {\n  private devtoolsExtension: ReduxDevtoolsExtension;\n  private extensionConnection!: ReduxDevtoolsExtensionConnection;\n\n  liftedActions$!: Observable<any>;\n  actions$!: Observable<any>;\n  start$!: Observable<any>;\n\n  constructor(\n    @Inject(REDUX_DEVTOOLS_EXTENSION) devtoolsExtension: ReduxDevtoolsExtension,\n    @Inject(STORE_DEVTOOLS_CONFIG) private config: StoreDevtoolsConfig,\n    private dispatcher: DevtoolsDispatcher\n  ) {\n    this.devtoolsExtension = devtoolsExtension;\n    this.createActionStreams();\n  }\n\n  notify(action: LiftedAction, state: LiftedState) {\n    if (!this.devtoolsExtension) {\n      return;\n    }\n    // Check to see if the action requires a full update of the liftedState.\n    // If it is a simple action generated by the user's app and the recording\n    // is not locked/paused, only send the action and the current state (fast).\n    //\n    // A full liftedState update (slow: serializes the entire liftedState) is\n    // only required when:\n    //   a) redux-devtools-extension fires the @@Init action (ignored by\n    //      @ngrx/store-devtools)\n    //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n    //      or @ngrx/store/update-reducers)\n    //   c) the state has been recomputed due to time-traveling\n    //   d) any action that is not a PerformAction to err on the side of\n    //      caution.\n    if (action.type === PERFORM_ACTION) {\n      if (state.isLocked || state.isPaused) {\n        return;\n      }\n\n      const currentState = unliftState(state);\n      if (\n        shouldFilterActions(this.config) &&\n        isActionFiltered(\n          currentState,\n          action,\n          this.config.predicate,\n          this.config.actionsSafelist,\n          this.config.actionsBlocklist\n        )\n      ) {\n        return;\n      }\n      const sanitizedState = this.config.stateSanitizer\n        ? sanitizeState(\n            this.config.stateSanitizer,\n            currentState,\n            state.currentStateIndex\n          )\n        : currentState;\n      const sanitizedAction = this.config.actionSanitizer\n        ? sanitizeAction(\n            this.config.actionSanitizer,\n            action,\n            state.nextActionId\n          )\n        : action;\n\n      this.sendToReduxDevtools(() =>\n        this.extensionConnection.send(sanitizedAction, sanitizedState)\n      );\n    } else {\n      // Requires full state update\n      const sanitizedLiftedState = {\n        ...state,\n        stagedActionIds: state.stagedActionIds,\n        actionsById: this.config.actionSanitizer\n          ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n          : state.actionsById,\n        computedStates: this.config.stateSanitizer\n          ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n          : state.computedStates,\n      };\n\n      this.sendToReduxDevtools(() =>\n        this.devtoolsExtension.send(\n          null,\n          sanitizedLiftedState,\n          this.getExtensionConfig(this.config)\n        )\n      );\n    }\n  }\n\n  private createChangesObservable(): Observable<any> {\n    if (!this.devtoolsExtension) {\n      return EMPTY;\n    }\n\n    return new Observable((subscriber) => {\n      const connection = this.devtoolsExtension.connect(\n        this.getExtensionConfig(this.config)\n      );\n      this.extensionConnection = connection;\n      connection.init();\n\n      connection.subscribe((change: any) => subscriber.next(change));\n      return connection.unsubscribe;\n    });\n  }\n\n  private createActionStreams() {\n    // Listens to all changes\n    const changes$ = this.createChangesObservable().pipe(share());\n\n    // Listen for the start action\n    const start$ = changes$.pipe(\n      filter((change: any) => change.type === ExtensionActionTypes.START)\n    );\n\n    // Listen for the stop action\n    const stop$ = changes$.pipe(\n      filter((change: any) => change.type === ExtensionActionTypes.STOP)\n    );\n\n    // Listen for lifted actions\n    const liftedActions$ = changes$.pipe(\n      filter((change) => change.type === ExtensionActionTypes.DISPATCH),\n      map((change) => this.unwrapAction(change.payload)),\n      concatMap((action: any) => {\n        if (action.type === IMPORT_STATE) {\n          // State imports may happen in two situations:\n          // 1. Explicitly by user\n          // 2. User activated the \"persist state accross reloads\" option\n          //    and now the state is imported during reload.\n          // Because of option 2, we need to give possible\n          // lazy loaded reducers time to instantiate.\n          // As soon as there is no UPDATE action within 1 second,\n          // it is assumed that all reducers are loaded.\n          return this.dispatcher.pipe(\n            filter((action) => action.type === UPDATE),\n            timeout(1000),\n            debounceTime(1000),\n            map(() => action),\n            catchError(() => of(action)),\n            take(1)\n          );\n        } else {\n          return of(action);\n        }\n      })\n    );\n\n    // Listen for unlifted actions\n    const actions$ = changes$.pipe(\n      filter((change) => change.type === ExtensionActionTypes.ACTION),\n      map((change) => this.unwrapAction(change.payload))\n    );\n\n    const actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n    const liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n    this.start$ = start$.pipe(takeUntil(stop$));\n\n    // Only take the action sources between the start/stop events\n    this.actions$ = this.start$.pipe(switchMap(() => actionsUntilStop$));\n    this.liftedActions$ = this.start$.pipe(switchMap(() => liftedUntilStop$));\n  }\n\n  private unwrapAction(action: Action) {\n    return typeof action === 'string' ? eval(`(${action})`) : action;\n  }\n\n  private getExtensionConfig(config: StoreDevtoolsConfig) {\n    const extensionOptions: ReduxDevtoolsExtensionConfig = {\n      name: config.name,\n      features: config.features,\n      serialize: config.serialize,\n      // The action/state sanitizers are not added to the config\n      // because sanitation is done in this class already.\n      // It is done before sending it to the devtools extension for consistency:\n      // - If we call extensionConnection.send(...),\n      //   the extension would call the sanitizers.\n      // - If we call devtoolsExtension.send(...) (aka full state update),\n      //   the extension would NOT call the sanitizers, so we have to do it ourselves.\n    };\n    if (config.maxAge !== false /* support === 0 */) {\n      extensionOptions.maxAge = config.maxAge;\n    }\n    return extensionOptions;\n  }\n\n  private sendToReduxDevtools(send: Function) {\n    try {\n      send();\n    } catch (err) {\n      console.warn(\n        '@ngrx/store-devtools: something went wrong inside the redux devtools',\n        err\n      );\n    }\n  }\n}\n","import { ErrorHandler } from '@angular/core';\nimport { Action, ActionReducer, UPDATE, INIT } from '@ngrx/store';\n\nimport { difference, liftAction, isActionFiltered } from './utils';\nimport * as DevtoolsActions from './actions';\nimport { StoreDevtoolsConfig } from './config';\nimport { PerformAction } from './actions';\n\nexport type InitAction = {\n  readonly type: typeof INIT;\n};\n\nexport type UpdateReducerAction = {\n  readonly type: typeof UPDATE;\n};\n\nexport type CoreActions = InitAction | UpdateReducerAction;\nexport type Actions = DevtoolsActions.All | CoreActions;\n\nexport const INIT_ACTION = { type: INIT };\n\nexport const RECOMPUTE = '@ngrx/store-devtools/recompute' as const;\nexport const RECOMPUTE_ACTION = { type: RECOMPUTE };\n\nexport interface ComputedState {\n  state: any;\n  error: any;\n}\n\nexport interface LiftedAction {\n  type: string;\n  action: Action;\n}\n\nexport interface LiftedActions {\n  [id: number]: LiftedAction;\n}\n\nexport interface LiftedState {\n  monitorState: any;\n  nextActionId: number;\n  actionsById: LiftedActions;\n  stagedActionIds: number[];\n  skippedActionIds: number[];\n  committedState: any;\n  currentStateIndex: number;\n  computedStates: ComputedState[];\n  isLocked: boolean;\n  isPaused: boolean;\n}\n\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(\n  reducer: ActionReducer<any, any>,\n  action: Action,\n  state: any,\n  error: any,\n  errorHandler: ErrorHandler\n) {\n  if (error) {\n    return {\n      state,\n      error: 'Interrupted by an error up the chain',\n    };\n  }\n\n  let nextState = state;\n  let nextError;\n  try {\n    nextState = reducer(state, action);\n  } catch (err) {\n    nextError = err.toString();\n    errorHandler.handleError(err);\n  }\n\n  return {\n    state: nextState,\n    error: nextError,\n  };\n}\n\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(\n  computedStates: ComputedState[],\n  minInvalidatedStateIndex: number,\n  reducer: ActionReducer<any, any>,\n  committedState: any,\n  actionsById: LiftedActions,\n  stagedActionIds: number[],\n  skippedActionIds: number[],\n  errorHandler: ErrorHandler,\n  isPaused: boolean\n) {\n  // Optimization: exit early and return the same reference\n  // if we know nothing could have changed.\n  if (\n    minInvalidatedStateIndex >= computedStates.length &&\n    computedStates.length === stagedActionIds.length\n  ) {\n    return computedStates;\n  }\n\n  const nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n  // If the recording is paused, recompute all states up until the pause state,\n  // else recompute all states.\n  const lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n  for (let i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n    const actionId = stagedActionIds[i];\n    const action = actionsById[actionId].action;\n\n    const previousEntry = nextComputedStates[i - 1];\n    const previousState = previousEntry ? previousEntry.state : committedState;\n    const previousError = previousEntry ? previousEntry.error : undefined;\n\n    const shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n    const entry: ComputedState = shouldSkip\n      ? previousEntry\n      : computeNextEntry(\n          reducer,\n          action,\n          previousState,\n          previousError,\n          errorHandler\n        );\n\n    nextComputedStates.push(entry);\n  }\n  // If the recording is paused, the last state will not be recomputed,\n  // because it's essentially not part of the state history.\n  if (isPaused) {\n    nextComputedStates.push(computedStates[computedStates.length - 1]);\n  }\n\n  return nextComputedStates;\n}\n\nexport function liftInitialState(\n  initialCommittedState?: any,\n  monitorReducer?: any\n): LiftedState {\n  return {\n    monitorState: monitorReducer(undefined, {}),\n    nextActionId: 1,\n    actionsById: { 0: liftAction(INIT_ACTION) },\n    stagedActionIds: [0],\n    skippedActionIds: [],\n    committedState: initialCommittedState,\n    currentStateIndex: 0,\n    computedStates: [],\n    isLocked: false,\n    isPaused: false,\n  };\n}\n\n/**\n * Creates a history state reducer from an app's reducer.\n */\nexport function liftReducerWith(\n  initialCommittedState: any,\n  initialLiftedState: LiftedState,\n  errorHandler: ErrorHandler,\n  monitorReducer?: any,\n  options: Partial<StoreDevtoolsConfig> = {}\n) {\n  /**\n   * Manages how the history actions modify the history state.\n   */\n  return (\n    reducer: ActionReducer<any, any>\n  ): ActionReducer<LiftedState, Actions> => (liftedState, liftedAction) => {\n    let {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused,\n    } = liftedState || initialLiftedState;\n\n    if (!liftedState) {\n      // Prevent mutating initialLiftedState\n      actionsById = Object.create(actionsById);\n    }\n\n    function commitExcessActions(n: number) {\n      // Auto-commits n-number of excess actions.\n      let excess = n;\n      let idsToDelete = stagedActionIds.slice(1, excess + 1);\n\n      for (let i = 0; i < idsToDelete.length; i++) {\n        if (computedStates[i + 1].error) {\n          // Stop if error is found. Commit actions up to error.\n          excess = i;\n          idsToDelete = stagedActionIds.slice(1, excess + 1);\n          break;\n        } else {\n          delete actionsById[idsToDelete[i]];\n        }\n      }\n\n      skippedActionIds = skippedActionIds.filter(\n        (id) => idsToDelete.indexOf(id) === -1\n      );\n      stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n      committedState = computedStates[excess].state;\n      computedStates = computedStates.slice(excess);\n      currentStateIndex =\n        currentStateIndex > excess ? currentStateIndex - excess : 0;\n    }\n\n    function commitChanges() {\n      // Consider the last committed state the new starting point.\n      // Squash any staged actions into a single committed state.\n      actionsById = { 0: liftAction(INIT_ACTION) };\n      nextActionId = 1;\n      stagedActionIds = [0];\n      skippedActionIds = [];\n      committedState = computedStates[currentStateIndex].state;\n      currentStateIndex = 0;\n      computedStates = [];\n    }\n\n    // By default, aggressively recompute every state whatever happens.\n    // This has O(n) performance, so we'll override this to a sensible\n    // value whenever we feel like we don't have to recompute the states.\n    let minInvalidatedStateIndex = 0;\n\n    switch (liftedAction.type) {\n      case DevtoolsActions.LOCK_CHANGES: {\n        isLocked = liftedAction.status;\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.PAUSE_RECORDING: {\n        isPaused = liftedAction.status;\n        if (isPaused) {\n          // Add a pause action to signal the devtools-user the recording is paused.\n          // The corresponding state will be overwritten on each update to always contain\n          // the latest state (see Actions.PERFORM_ACTION).\n          stagedActionIds = [...stagedActionIds, nextActionId];\n          actionsById[nextActionId] = new PerformAction(\n            {\n              type: '@ngrx/devtools/pause',\n            },\n            +Date.now()\n          );\n          nextActionId++;\n          minInvalidatedStateIndex = stagedActionIds.length - 1;\n          computedStates = computedStates.concat(\n            computedStates[computedStates.length - 1]\n          );\n\n          if (currentStateIndex === stagedActionIds.length - 2) {\n            currentStateIndex++;\n          }\n          minInvalidatedStateIndex = Infinity;\n        } else {\n          commitChanges();\n        }\n        break;\n      }\n      case DevtoolsActions.RESET: {\n        // Get back to the state the store was created with.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        committedState = initialCommittedState;\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case DevtoolsActions.COMMIT: {\n        commitChanges();\n        break;\n      }\n      case DevtoolsActions.ROLLBACK: {\n        // Forget about any staged actions.\n        // Start again from the last committed state.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case DevtoolsActions.TOGGLE_ACTION: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { id: actionId } = liftedAction;\n        const index = skippedActionIds.indexOf(actionId);\n        if (index === -1) {\n          skippedActionIds = [actionId, ...skippedActionIds];\n        } else {\n          skippedActionIds = skippedActionIds.filter((id) => id !== actionId);\n        }\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n        break;\n      }\n      case DevtoolsActions.SET_ACTIONS_ACTIVE: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { start, end, active } = liftedAction;\n        const actionIds = [];\n        for (let i = start; i < end; i++) actionIds.push(i);\n        if (active) {\n          skippedActionIds = difference(skippedActionIds, actionIds);\n        } else {\n          skippedActionIds = [...skippedActionIds, ...actionIds];\n        }\n\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n        break;\n      }\n      case DevtoolsActions.JUMP_TO_STATE: {\n        // Without recomputing anything, move the pointer that tell us\n        // which state is considered the current one. Useful for sliders.\n        currentStateIndex = liftedAction.index;\n        // Optimization: we know the history has not changed.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.JUMP_TO_ACTION: {\n        // Jumps to a corresponding state to a specific action.\n        // Useful when filtering actions.\n        const index = stagedActionIds.indexOf(liftedAction.actionId);\n        if (index !== -1) currentStateIndex = index;\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case DevtoolsActions.SWEEP: {\n        // Forget any actions that are currently being skipped.\n        stagedActionIds = difference(stagedActionIds, skippedActionIds);\n        skippedActionIds = [];\n        currentStateIndex = Math.min(\n          currentStateIndex,\n          stagedActionIds.length - 1\n        );\n        break;\n      }\n      case DevtoolsActions.PERFORM_ACTION: {\n        // Ignore action and return state as is if recording is locked\n        if (isLocked) {\n          return liftedState || initialLiftedState;\n        }\n\n        if (\n          isPaused ||\n          (liftedState &&\n            isActionFiltered(\n              liftedState.computedStates[currentStateIndex],\n              liftedAction,\n              options.predicate,\n              options.actionsSafelist,\n              options.actionsBlocklist\n            ))\n        ) {\n          // If recording is paused or if the action should be ignored, overwrite the last state\n          // (corresponds to the pause action) and keep everything else as is.\n          // This way, the app gets the new current state while the devtools\n          // do not record another action.\n          const lastState = computedStates[computedStates.length - 1];\n          computedStates = [\n            ...computedStates.slice(0, -1),\n            computeNextEntry(\n              reducer,\n              liftedAction.action,\n              lastState.state,\n              lastState.error,\n              errorHandler\n            ),\n          ];\n          minInvalidatedStateIndex = Infinity;\n          break;\n        }\n\n        // Auto-commit as new actions come in.\n        if (options.maxAge && stagedActionIds.length === options.maxAge) {\n          commitExcessActions(1);\n        }\n\n        if (currentStateIndex === stagedActionIds.length - 1) {\n          currentStateIndex++;\n        }\n        const actionId = nextActionId++;\n        // Mutation! This is the hottest path, and we optimize on purpose.\n        // It is safe because we set a new key in a cache dictionary.\n        actionsById[actionId] = liftedAction;\n\n        stagedActionIds = [...stagedActionIds, actionId];\n        // Optimization: we know that only the new action needs computing.\n        minInvalidatedStateIndex = stagedActionIds.length - 1;\n        break;\n      }\n      case DevtoolsActions.IMPORT_STATE: {\n        // Completely replace everything.\n        ({\n          monitorState,\n          actionsById,\n          nextActionId,\n          stagedActionIds,\n          skippedActionIds,\n          committedState,\n          currentStateIndex,\n          computedStates,\n          isLocked,\n          isPaused,\n        } = liftedAction.nextLiftedState);\n        break;\n      }\n      case INIT: {\n        // Always recompute states on hot reload and init.\n        minInvalidatedStateIndex = 0;\n\n        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n          // States must be recomputed before committing excess.\n          computedStates = recomputeStates(\n            computedStates,\n            minInvalidatedStateIndex,\n            reducer,\n            committedState,\n            actionsById,\n            stagedActionIds,\n            skippedActionIds,\n            errorHandler,\n            isPaused\n          );\n\n          commitExcessActions(stagedActionIds.length - options.maxAge);\n\n          // Avoid double computation.\n          minInvalidatedStateIndex = Infinity;\n        }\n\n        break;\n      }\n      case UPDATE: {\n        const stateHasErrors =\n          computedStates.filter((state) => state.error).length > 0;\n\n        if (stateHasErrors) {\n          // Recompute all states\n          minInvalidatedStateIndex = 0;\n\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            // States must be recomputed before committing excess.\n            computedStates = recomputeStates(\n              computedStates,\n              minInvalidatedStateIndex,\n              reducer,\n              committedState,\n              actionsById,\n              stagedActionIds,\n              skippedActionIds,\n              errorHandler,\n              isPaused\n            );\n\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n\n            // Avoid double computation.\n            minInvalidatedStateIndex = Infinity;\n          }\n        } else {\n          // If not paused/locked, add a new action to signal devtools-user\n          // that there was a reducer update.\n          if (!isPaused && !isLocked) {\n            if (currentStateIndex === stagedActionIds.length - 1) {\n              currentStateIndex++;\n            }\n\n            // Add a new action to only recompute state\n            const actionId = nextActionId++;\n            actionsById[actionId] = new PerformAction(\n              liftedAction,\n              +Date.now()\n            );\n            stagedActionIds = [...stagedActionIds, actionId];\n\n            minInvalidatedStateIndex = stagedActionIds.length - 1;\n\n            computedStates = recomputeStates(\n              computedStates,\n              minInvalidatedStateIndex,\n              reducer,\n              committedState,\n              actionsById,\n              stagedActionIds,\n              skippedActionIds,\n              errorHandler,\n              isPaused\n            );\n          }\n\n          // Recompute state history with latest reducer and update action\n          computedStates = computedStates.map((cmp) => ({\n            ...cmp,\n            state: reducer(cmp.state, RECOMPUTE_ACTION),\n          }));\n\n          currentStateIndex = stagedActionIds.length - 1;\n\n          if (options.maxAge && stagedActionIds.length > options.maxAge) {\n            commitExcessActions(stagedActionIds.length - options.maxAge);\n          }\n\n          // Avoid double computation.\n          minInvalidatedStateIndex = Infinity;\n        }\n\n        break;\n      }\n      default: {\n        // If the action is not recognized, it's a monitor action.\n        // Optimization: a monitor action can't change history.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n    }\n\n    computedStates = recomputeStates(\n      computedStates,\n      minInvalidatedStateIndex,\n      reducer,\n      committedState,\n      actionsById,\n      stagedActionIds,\n      skippedActionIds,\n      errorHandler,\n      isPaused\n    );\n    monitorState = monitorReducer(monitorState, liftedAction);\n\n    return {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n      isLocked,\n      isPaused,\n    };\n  };\n}\n","import { Injectable, Inject, ErrorHandler } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionsSubject,\n  INITIAL_STATE,\n  ReducerObservable,\n  ScannedActionsSubject,\n} from '@ngrx/store';\nimport {\n  merge,\n  Observable,\n  Observer,\n  queueScheduler,\n  ReplaySubject,\n  Subscription,\n} from 'rxjs';\nimport { map, observeOn, scan, skip, withLatestFrom } from 'rxjs/operators';\n\nimport * as Actions from './actions';\nimport { STORE_DEVTOOLS_CONFIG, StoreDevtoolsConfig } from './config';\nimport { DevtoolsExtension } from './extension';\nimport { LiftedState, liftInitialState, liftReducerWith } from './reducer';\nimport {\n  liftAction,\n  unliftState,\n  shouldFilterActions,\n  filterLiftedState,\n} from './utils';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\nimport { PERFORM_ACTION } from './actions';\n\n@Injectable()\nexport class StoreDevtools implements Observer<any> {\n  private stateSubscription: Subscription;\n  private extensionStartSubscription: Subscription;\n  public dispatcher: ActionsSubject;\n  public liftedState: Observable<LiftedState>;\n  public state: Observable<any>;\n\n  constructor(\n    dispatcher: DevtoolsDispatcher,\n    actions$: ActionsSubject,\n    reducers$: ReducerObservable,\n    extension: DevtoolsExtension,\n    scannedActions: ScannedActionsSubject,\n    errorHandler: ErrorHandler,\n    @Inject(INITIAL_STATE) initialState: any,\n    @Inject(STORE_DEVTOOLS_CONFIG) config: StoreDevtoolsConfig\n  ) {\n    const liftedInitialState = liftInitialState(initialState, config.monitor);\n    const liftReducer = liftReducerWith(\n      initialState,\n      liftedInitialState,\n      errorHandler,\n      config.monitor,\n      config\n    );\n\n    const liftedAction$ = merge(\n      merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(\n        map(liftAction)\n      ),\n      dispatcher,\n      extension.liftedActions$\n    ).pipe(observeOn(queueScheduler));\n\n    const liftedReducer$ = reducers$.pipe(map(liftReducer));\n\n    const liftedStateSubject = new ReplaySubject<LiftedState>(1);\n\n    const liftedStateSubscription = liftedAction$\n      .pipe(\n        withLatestFrom(liftedReducer$),\n        scan<\n          [any, ActionReducer<LiftedState, Actions.All>],\n          {\n            state: LiftedState;\n            action: any;\n          }\n        >(\n          ({ state: liftedState }, [action, reducer]) => {\n            let reducedLiftedState = reducer(liftedState, action);\n            // On full state update\n            // If we have actions filters, we must filter completely our lifted state to be sync with the extension\n            if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n              reducedLiftedState = filterLiftedState(\n                reducedLiftedState,\n                config.predicate,\n                config.actionsSafelist,\n                config.actionsBlocklist\n              );\n            }\n            // Extension should be sent the sanitized lifted state\n            extension.notify(action, reducedLiftedState);\n            return { state: reducedLiftedState, action };\n          },\n          { state: liftedInitialState, action: null as any }\n        )\n      )\n      .subscribe(({ state, action }) => {\n        liftedStateSubject.next(state);\n\n        if (action.type === Actions.PERFORM_ACTION) {\n          const unliftedAction = (action as Actions.PerformAction).action;\n\n          scannedActions.next(unliftedAction);\n        }\n      });\n\n    const extensionStartSubscription = extension.start$.subscribe(() => {\n      this.refresh();\n    });\n\n    const liftedState$ = liftedStateSubject.asObservable() as Observable<\n      LiftedState\n    >;\n    const state$ = liftedState$.pipe(map(unliftState));\n\n    this.extensionStartSubscription = extensionStartSubscription;\n    this.stateSubscription = liftedStateSubscription;\n    this.dispatcher = dispatcher;\n    this.liftedState = liftedState$;\n    this.state = state$;\n  }\n\n  dispatch(action: Action) {\n    this.dispatcher.next(action);\n  }\n\n  next(action: any) {\n    this.dispatcher.next(action);\n  }\n\n  error(error: any) {}\n\n  complete() {}\n\n  performAction(action: any) {\n    this.dispatch(new Actions.PerformAction(action, +Date.now()));\n  }\n\n  refresh() {\n    this.dispatch(new Actions.Refresh());\n  }\n\n  reset() {\n    this.dispatch(new Actions.Reset(+Date.now()));\n  }\n\n  rollback() {\n    this.dispatch(new Actions.Rollback(+Date.now()));\n  }\n\n  commit() {\n    this.dispatch(new Actions.Commit(+Date.now()));\n  }\n\n  sweep() {\n    this.dispatch(new Actions.Sweep());\n  }\n\n  toggleAction(id: number) {\n    this.dispatch(new Actions.ToggleAction(id));\n  }\n\n  jumpToAction(actionId: number) {\n    this.dispatch(new Actions.JumpToAction(actionId));\n  }\n\n  jumpToState(index: number) {\n    this.dispatch(new Actions.JumpToState(index));\n  }\n\n  importState(nextLiftedState: any) {\n    this.dispatch(new Actions.ImportState(nextLiftedState));\n  }\n\n  lockChanges(status: boolean) {\n    this.dispatch(new Actions.LockChanges(status));\n  }\n\n  pauseRecording(status: boolean) {\n    this.dispatch(new Actions.PauseRecording(status));\n  }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReducerManagerDispatcher, StateObservable } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport {\n  INITIAL_OPTIONS,\n  STORE_DEVTOOLS_CONFIG,\n  StoreDevtoolsConfig,\n  StoreDevtoolsOptions,\n  noMonitor,\n  createConfig,\n} from './config';\nimport { StoreDevtools } from './devtools';\nimport {\n  DevtoolsExtension,\n  REDUX_DEVTOOLS_EXTENSION,\n  ReduxDevtoolsExtension,\n} from './extension';\nimport { DevtoolsDispatcher } from './devtools-dispatcher';\n\nexport const IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken<boolean>(\n  '@ngrx/store-devtools Is Devtools Extension or Monitor Present'\n);\n\nexport function createIsExtensionOrMonitorPresent(\n  extension: ReduxDevtoolsExtension | null,\n  config: StoreDevtoolsConfig\n) {\n  return Boolean(extension) || config.monitor !== noMonitor;\n}\n\nexport function createReduxDevtoolsExtension() {\n  const extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n\n  if (\n    typeof window === 'object' &&\n    typeof (window as any)[extensionKey] !== 'undefined'\n  ) {\n    return (window as any)[extensionKey];\n  } else {\n    return null;\n  }\n}\n\nexport function createStateObservable(\n  devtools: StoreDevtools\n): Observable<any> {\n  return devtools.state;\n}\n\n@NgModule({})\nexport class StoreDevtoolsModule {\n  static instrument(\n    options: StoreDevtoolsOptions = {}\n  ): ModuleWithProviders<StoreDevtoolsModule> {\n    return {\n      ngModule: StoreDevtoolsModule,\n      providers: [\n        DevtoolsExtension,\n        DevtoolsDispatcher,\n        StoreDevtools,\n        {\n          provide: INITIAL_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n          deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n          useFactory: createIsExtensionOrMonitorPresent,\n        },\n        {\n          provide: REDUX_DEVTOOLS_EXTENSION,\n          useFactory: createReduxDevtoolsExtension,\n        },\n        {\n          provide: STORE_DEVTOOLS_CONFIG,\n          deps: [INITIAL_OPTIONS],\n          useFactory: createConfig,\n        },\n        {\n          provide: StateObservable,\n          deps: [StoreDevtools],\n          useFactory: createStateObservable,\n        },\n        {\n          provide: ReducerManagerDispatcher,\n          useExisting: DevtoolsDispatcher,\n        },\n      ],\n    };\n  }\n}\n","/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {STORE_DEVTOOLS_CONFIG as ɵe,createConfig as ɵg,noMonitor as ɵf} from './src/config';\nexport {DevtoolsDispatcher as ɵj} from './src/devtools-dispatcher';\nexport {DevtoolsExtension as ɵi,REDUX_DEVTOOLS_EXTENSION as ɵh} from './src/extension';\nexport {IS_EXTENSION_OR_MONITOR_PRESENT as ɵa,createIsExtensionOrMonitorPresent as ɵb,createReduxDevtoolsExtension as ɵc,createStateObservable as ɵd} from './src/instrument';"]}